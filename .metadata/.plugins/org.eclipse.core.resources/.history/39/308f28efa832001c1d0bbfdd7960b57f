package polynomial;

/**
 * This class represents an empty node in the list adt implementation.
 */
public class PolynomialListADTEmptyNode implements PolynomialADTNode {
  @Override
  public int count() {
    return 0;
  }

  @Override
  public String toString() {
    return "";
  }

  @Override
  public PolynomialADTNode addFront(Monomial polynomial) {
    return new PolynomialListADTElementNode(polynomial, this);
  }

  @Override
  public PolynomialADTNode addBack(Monomial polynomial) {
    return addFront(polynomial);
  }

  @Override
  public PolynomialADTNode add(int index, Monomial polynomial) throws IllegalArgumentException {
    if (index == 0) {
      return addFront(polynomial);
    }
    throw new IllegalArgumentException("Invalid index to add an element");
  }

  @Override
  public PolynomialADTNode remove(Monomial b) {
    return this; // cannot remove from nothing!
  }

  @Override
  public Monomial get(int index) throws IllegalArgumentException {
    throw new IllegalArgumentException("Wrong index");
  }
}